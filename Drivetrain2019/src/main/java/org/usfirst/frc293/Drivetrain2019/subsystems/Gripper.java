// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc293.Drivetrain2019.subsystems;


import org.usfirst.frc293.Drivetrain2019.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
import edu.wpi.first.wpilibj.DoubleSolenoid.Value;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Timer;
import org.usfirst.frc293.Drivetrain2019.commands.Shoot;
import edu.wpi.first.wpilibj.command.Command;
/**
 *
 */
public class Gripper extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private Compressor compressor1;
    private DoubleSolenoid doubleSolenoid1;
    private DoubleSolenoid doubleSolenoid2;
    private DigitalInput proximitySensor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public boolean turnAutoOn = true;
    public Gripper() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        compressor1 = new Compressor(0);
        addChild("Compressor 1",compressor1);
        
        
        doubleSolenoid1 = new DoubleSolenoid(0, 1, 0);
        addChild("Double Solenoid 1",doubleSolenoid1);
        
        
        doubleSolenoid2 = new DoubleSolenoid(0, 4, 5);
        addChild("Double Solenoid 2",doubleSolenoid2);
        
        
        proximitySensor = new DigitalInput(0);
        addChild("Proximity Sensor",proximitySensor);
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
        setDefaultCommand(new AutoGrip());
        //TODO Get autogrip
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void openGripper(){
        doubleSolenoid1.set(Value.kReverse); // Reversed for some reason
    }
    public void closeGripper(){
        doubleSolenoid1.set(Value.kForward);
    }
    public void offGripper(){
        doubleSolenoid1.set(Value.kOff);
    }
    public void pusherIn(){
        doubleSolenoid2.set(Value.kReverse);
    }
    public void pusherOut(){
        doubleSolenoid2.set(Value.kForward);
    }
    public void pusherOff(){
        doubleSolenoid2.set(Value.kOff);
    }
    public void autoOn(){
        turnAutoOn = true;
    }
    public void autoOff(){
        turnAutoOn = false;
    }


    public void autoGrip(){ 
        if(!proximitySensor.get() && turnAutoOn){
            closeGripper();
        }

    }
}

